AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Big Data infrastructure template with S3, DynamoDB, EC2 and IAM roles,
  ready for Paris region (fr-paris) and validated for cfn-lint.

Parameters:
  Environment:
    Type: String
    Default: dev
    Description: Environment name (dev/test/prod)
  BucketNamePrefix:
    Type: String
    Default: bigdata-bucket
    Description: Prefix for S3 bucket
  DynamoTableName:
    Type: String
    Default: BigDataTable
    Description: DynamoDB table name
  EC2KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of an existing EC2 KeyPair
  InstanceType:
    Type: String
    Default: t3.micro
    Description: EC2 instance type

Resources:

  ### S3 Bucket ###
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${BucketNamePrefix}-${Environment}-${AWS::Region}"

  ### DynamoDB Table ###
  DynamoTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Ref DynamoTableName
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
        - AttributeName: sk
          AttributeType: S
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST

  ### IAM Role for EC2 ###
  EC2Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: [ec2.amazonaws.com]
            Action: sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess

  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref EC2Role
      Path: "/"

  ### Security Group ###
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access
      VpcId: !Ref "AWS::NoValue" # Default VPC will be used if not specified
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

  ### EC2 Instance ###
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      KeyName: !Ref EC2KeyName
      SecurityGroupIds:
        - !Ref InstanceSecurityGroup
      IamInstanceProfile: !Ref EC2InstanceProfile
      ImageId: !Ref LatestAmiId
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          set -eux

          dnf update -y
          dnf install -y amazon-cloudwatch-agent jq

          echo "hello from $(hostname) in ${AWS::Region} (${Environment})" > /tmp/hello.txt
          aws s3 cp /tmp/hello.txt s3://${BucketNamePrefix}-${Environment}-${AWS::Region}/hello.txt

          INSTANCE_ID=$(curl -s http://169.254.169.254/latest/meta-data/instance-id)

          JSON_ITEM=$(cat <<EOF
{
  "pk": {"S": "host#${INSTANCE_ID}"},
  "sk": {"S": "hello#$(date +%s)"},
  "msg": {"S": "hello from EC2"}
}
EOF
)

          aws dynamodb put-item --table-name ${DynamoTableName} --item "$JSON_ITEM"

  ### Latest Amazon Linux 2023 AMI ###
