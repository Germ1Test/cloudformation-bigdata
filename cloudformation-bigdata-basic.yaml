AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Minimal Big Data infrastructure with S3, DynamoDB, and EC2.
  Simplified version with fixed names (suitable for dev/demo environments).

Parameters:
  # Paramètre obligatoire : nom d’une paire de clés EC2 déjà créée
  # Sert à se connecter à l’instance en SSH
  EC2KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of an existing EC2 KeyPair

Resources:

  # -------------------------------
  # S3 Bucket
  # -------------------------------
  # Sert à stocker les fichiers (données brutes, traitées, logs…)
  # Nom fixé pour simplifier le déploiement
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: my-bigdata-bucket-fr-paris

  # -------------------------------
  # DynamoDB Table
  # -------------------------------
  # Table NoSQL pour stocker des événements, métadonnées, résultats de traitements
  DynamoTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: BigDataTable
      AttributeDefinitions:
        - AttributeName: pk   # Partition Key (clé primaire)
          AttributeType: S
        - AttributeName: sk   # Sort Key (clé de tri)
          AttributeType: S
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST  # Pas besoin de gérer la capacité, facturation à l’usage

  # -------------------------------
  # IAM Role pour EC2
  # -------------------------------
  # Autorise l’instance EC2 à accéder à S3 et DynamoDB
  EC2Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: [ec2.amazonaws.com]
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess

  # Profil d’instance nécessaire pour associer le rôle à EC2
  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles: [!Ref EC2Role]

  # -------------------------------
  # Security Group
  # -------------------------------
  # Permet l’accès SSH (port 22) à l’instance EC2
  # ⚠️ Pour plus de sécurité, limiter à votre IP publique au lieu de 0.0.0.0/0
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

  # -------------------------------
  # Instance EC2
  # -------------------------------
  # - Type fixé : t3.micro (économique, adapté à un petit POC)
  # - AMI via SSM Parameter Store (toujours la dernière version d’Amazon Linux 2023)
  # - UserData :
  #   * met à jour la machine
  #   * installe quelques outils
  #   * écrit un fichier test dans S3
  #   * enregistre un item dans DynamoDB
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t3.micro
      KeyName: !Ref EC2KeyName
      SecurityGroupIds: [!GetAtt InstanceSecurityGroup.GroupId]
      IamInstanceProfile: !Ref EC2InstanceProfile
      ImageId: !Ref "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>::/aws/service/ami-amazon-linux-latest/amzn2023-ami-kernel-default-x86_64"
      UserData:
        Fn::Base64: !Join
          - ''
          - - "#!/bin/bash\n"
            - "set -eux\n"
            - "dnf update -y\n"
            - "dnf install -y amazon-cloudwatch-agent jq\n"
            - "echo \"hello from $(hostname)\" > /tmp/hello.txt\n"
            - "aws s3 cp /tmp/hello.txt s3://my-bigdata-bucket-fr-paris/hello.txt\n"
            - "INSTANCE_ID=$(curl -s http://169.254.169.254/latest/meta-data/instance-id)\n"
            - "aws dynamodb put-item --table-name BigDataTable "
            - " --item '{\"pk\":{\"S\":\"host#'$INSTANCE_ID'\"},\"sk\":{\"S\":\"hello#'$(date +%s)'\"},\"msg\":{\"S\":\"hello from EC2\"}}'\n"
